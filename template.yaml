AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  serverless-notify

Globals:
  Function:
    Timeout: 30
    Tracing: Active     
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true

Parameters:
  Email:
    Type: String
    Description: Email address to receive notifications

Resources:
  NotifyRestApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: NotifyRestApi
      StageName: Prod
      Description: Notify API
      Cors: 
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'" 
      Models:
        NotifyValidationModel:
          type: object
          required: 
            - priority
            - message
            - userId
          properties:
            priority:
              type: string
              enum: 
                - HIGH
                - MEDIUM
                - LOW
            message:
              type: string
            userId:
              type: string 

  NotifyUsagePlan:
      Type: AWS::ApiGateway::UsagePlan
      Properties:
        ApiStages:
          - ApiId: !Ref NotifyRestApi
            Stage: Prod
        Description: NotifyUsagePlan
        Quota:
          Limit: 5
          Period: DAY

  SNSNotifyTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: NotifyTopic
      TopicName: NotifyTopic
  
  SNSNotifyHighPrioritySubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn: !Ref SNSNotifyTopic
      Endpoint: !GetAtt SQSNotifyHighPriorityQueue.Arn
      FilterPolicy: 
        priority: 
          - HIGH
  
  SNSNotifyMediumPrioritySubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn: !Ref SNSNotifyTopic
      Endpoint: !GetAtt SQSNotifyMediumPriorityQueue.Arn
      FilterPolicy: 
        priority: 
          - MEDIUM
  
  SNSNotifyLowPrioritySubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn: !Ref SNSNotifyTopic
      Endpoint: !GetAtt SQSNotifyLowPriorityQueue.Arn
      FilterPolicy: 
        priority: 
          - LOW 
  
  SQSNotifyHighPriorityQueue:
    Type: AWS::SQS::Queue
    Properties:     
      QueueName: NotifyHighPriorityQueue
      VisibilityTimeout: 30
      MessageRetentionPeriod: 345600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt SQSNotifyHighPriorityDLQ.Arn
        maxReceiveCount: 5
  
  SQSNotifyMediumPriorityQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: NotifyMediumPriorityQueue
      VisibilityTimeout: 30
      MessageRetentionPeriod: 345600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt SQSNotifyMediumPriorityDLQ.Arn
        maxReceiveCount: 5
  
  SQSNotifyLowPriorityQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: NotifyLowPriorityQueue
      VisibilityTimeout: 30
      MessageRetentionPeriod: 345600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt SQSNotifyLowPriorityDLQ.Arn
        maxReceiveCount: 5
  
  SQSNotifyHighPriorityQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref SQSNotifyHighPriorityQueue 
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: SQS:SendMessage
            Resource: !GetAtt SQSNotifyHighPriorityQueue.Arn 
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref SNSNotifyTopic

  SQSNotifyMediumPriorityQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref SQSNotifyMediumPriorityQueue 
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: SQS:SendMessage
            Resource: !GetAtt SQSNotifyMediumPriorityQueue.Arn 
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref SNSNotifyTopic
  
  SQSNotifyLowPriorityQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref SQSNotifyLowPriorityQueue 
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: SQS:SendMessage
            Resource: !GetAtt SQSNotifyLowPriorityQueue.Arn 
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref SNSNotifyTopic

  NotifyProcessFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: NotifyProcessFunction
      CodeUri: notify-process/
      Handler: app.handler  
      Runtime: nodejs20.x
      MemorySize: 128
      Policies: 
        - SQSPollerPolicy:
            QueueName: !Ref SQSNotifyHighPriorityQueue
        - SQSPollerPolicy:
            QueueName: !Ref SQSNotifyMediumPriorityQueue
        - SQSPollerPolicy:
            QueueName: !Ref SQSNotifyLowPriorityQueue
        - DynamoDBCrudPolicy:
            TableName: !Ref NotifyTable
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt SNSNotifyAlert.TopicName 
      Architectures:
        - x86_64
      Environment:
        Variables: 
          DYNAMODB_TABLE_NAME: !Ref NotifyTable
          SNS_TOPIC_ARN: !Ref SNSNotifyAlert 
      Events:
        SQSNotifyHighPriorityQueueEvent:
          Type: SQS 
          Properties:
            Queue: !GetAtt SQSNotifyHighPriorityQueue.Arn
            BatchSize: 10
        SQSNotifyMediumPriorityQueueEvent:
          Type: SQS 
          Properties:
            Queue: !GetAtt SQSNotifyMediumPriorityQueue.Arn
            BatchSize: 10
        SQSNotifyLowPriorityQueueEvent:
          Type: SQS 
          Properties:
            Queue: !GetAtt SQSNotifyLowPriorityQueue.Arn
            BatchSize: 10
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - app.ts

  NotifyValidationFunction:
    Type: AWS::Serverless::Function  
    Properties:    
      FunctionName: NotifyValidationFunction
      CodeUri: notify-validation/
      Handler: app.handler
      Runtime: nodejs20.x
      MemorySize: 128
      Policies: 
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt SNSNotifyTopic.TopicName 
      Architectures:
      - x86_64
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref SNSNotifyTopic 
      Events:
        HelloWorld:
          Type: Api
          Properties: 
            RestApiId: !Ref NotifyRestApi
            Path: /notifications
            Method: post
            Auth:
              ApiKeyRequired: true
            RequestModel:
              Model: NotifyValidationModel
              Required: True
              ValidateBody: True
              ValidateParameters: True
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - app.ts

  NotifyTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: NotifyTable
      AttributeDefinitions:
        - AttributeName: ID
          AttributeType: S
      KeySchema:
        - AttributeName: ID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  SNSNotifyAlert:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: NotifyAlertTopic
      TopicName: NotifyAlertTopic

  SNSNotifyAlertSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn: !Ref SNSNotifyAlert
      Endpoint: !Ref Email  

  SQSNotifyLowPriorityDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: NotifyLowPriorityDLQ
      VisibilityTimeout: 30
      MessageRetentionPeriod: 345600
  
  SQSNotifyMediumPriorityDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: NotifyMediumPriorityDLQ
      VisibilityTimeout: 30
      MessageRetentionPeriod: 345600
  
  SQSNotifyHighPriorityDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: NotifyHighPriorityDLQ
      VisibilityTimeout: 30
      MessageRetentionPeriod: 345600

  NotifyProcessDLQFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: NotifyProcessDLQFunction
      CodeUri: notify-process-dlq/
      Handler: app.handler  
      Runtime: nodejs20.x
      MemorySize: 128
      Policies: 
        - SQSPollerPolicy:
            QueueName: !Ref SQSNotifyHighPriorityDLQ
        - SQSPollerPolicy:
            QueueName: !Ref SQSNotifyMediumPriorityDLQ
        - SQSPollerPolicy:
            QueueName: !Ref SQSNotifyLowPriorityDLQ 
      Architectures:
        - x86_64  
      Events:
        SQSNotifyHighPriorityDLQEvent:
          Type: SQS 
          Properties:
            Queue: !GetAtt SQSNotifyHighPriorityDLQ.Arn
            BatchSize: 10
        SQSNotifyMediumPriorityDLQEvent:
          Type: SQS 
          Properties:
            Queue: !GetAtt SQSNotifyMediumPriorityDLQ.Arn
            BatchSize: 10
        SQSNotifyLowPriorityDLQEvent:
          Type: SQS 
          Properties:
            Queue: !GetAtt SQSNotifyLowPriorityDLQ.Arn
            BatchSize: 10
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - app.ts   
 
